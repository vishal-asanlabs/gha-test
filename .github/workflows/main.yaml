on:
  repository_dispatch:
    types: [build, release]
  issues:
    types:
      - opened
  push:
    branches:
      - main

name: dev deployment
jobs:
  setup: 
    name: Setup
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.dev.outputs.tag || steps.devmain.outputs.tag || steps.devslack.outputs.tag }}
      git-branch: ${{ steps.dev.outputs.git-branch  ||  steps.devmain.outputs.git-branch || steps.devslack.outputs.git-branch }}
      stack: ${{ steps.dev.outputs.stack || steps.devmain.outputs.stack || steps.devslack.outputs.stack }}
    steps:
      - name: devslack
        if: github.event_name == 'repository_dispatch'
        id: devslack
        run: |
          echo "::set-output name=git-branch::$(echo ${{ github.event.client_payload.ref }})"
          echo "::set-output name=tag::dev-$(date +%FT%H-%M)"
          echo "::set-output name=stack::alpha"
      - name: dev-deployment-any-branch
        if: startsWith(github.event.issue.title, 'deploy')
        id: dev
        run: |
          echo "::set-output name=git-branch::$(echo ${{ github.event.issue.title }} | sed 's/^deploy //I')"
          echo "::set-output name=tag::dev-$(date +%FT%H-%M)"
          echo "::set-output name=stack::alpha"
      - name: master deployment
        if: github.event_name == 'push'

        id: devmain
        run: |
          echo "::set-output name=git-branch::main"
          echo "::set-output name=tag::dev-$(date +%FT%H-%M)"
          echo "::set-output name=stack::alpha"
  deploy:
      if: needs.setup.outputs.git-branch
      steps:
      # - name: Configure AWS credentials account
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
      #     role-session-name: ${{ secrets.AWS_ROLE }}
      #     aws-region: us-east-1
      
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.setup.outputs.git-branch }}

      - name: Build Docker image
        run: docker build . -t ratel:latest

      # - name: Push image to ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: cf-ecr-dev
      #     IMAGE_TAG: ${{ steps.tag.outputs.tag }}
      #   run: |
      #     docker tag ratel:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      - name: Checkout Ops
        uses: actions/checkout@v2
        with:
          repository: ${{ format('{0}-ops', github.repository) }}
          token: ${{ secrets.CF_Token }}
          path: ops

      - uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: 3.9.2

      - name: Update tag
        run: |
          kustomize edit set image $IMAGE_REGISTRY/$IMAGE_REPO:${{ needs.setup.outputs.tag }}
        working-directory: ${{ format('ops/{0}', needs.setup.outputs.stack) }}

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Deploy tag ${{ needs.setup.outputs.tag }}
          repository: ops
          branch: main
    
  close-issue:
    name: Close GitHub issue
    runs-on: ubuntu-18.04
    needs: [ deploy ]
    if: startsWith(github.event.issue.title, 'deploy')
    steps:
      - name: Close issue
        uses: peter-evans/close-issue@v1
        with:
          comment: |
            Deployed branch
            Auto-closing this issue.